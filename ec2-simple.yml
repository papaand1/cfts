AWSTemplateFormatVersion: 2010-09-09
Description: Create An EC2 instance
Parameters:
  Subnet:
    Description: Name of an existing Subnet
    Type: AWS::EC2::Subnet::Id
    ConstraintDescription: must be the name of an existing Subnet.
  InstanceSecurityGroup:
    Description: Name of an existing Security groups
    Type: AWS::EC2::SecurityGroup::Id
    ConstraintDescription: must be the name of an existing Subnet.    
  EnvironmentName:
    Description: An environment name that will be prefixed to resource names
    Type: String
    AllowedValues:
    - Prod
    - Dev
    - QA   
  EmployeeID:
    Description: EmployeeID
    Type: String
  EmployeeContact:
    Description: Contact of the Employee 
    Type: String
  LOB:
    Description: Line of business
    Type: String
    AllowedValues:
    - DBA
    - DEVOPS
    - SYSADMIN
    - CLOUD    
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
  InstanceType:
    Description: WebServer EC2 instance type
    Type: String
    Default: t1.micro
    AllowedValues:
    - t1.micro
    - t2.nano
    - t2.micro
    - t2.small
    - t2.medium 
    ConstraintDescription: must be a valid and allowed EC2 instance type.    
  SSHLocation: 
    Description: Subnet allowed to ssh on TCP to public subnet
    Type: String    
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(/([0-9]|[1-2][0-9]|3[0-2]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/0-28
    Default: 0.0.0.0/0
    MinLength: '9'
    MaxLength: '18'
Mappings:
  AWSInstanceType2Arch:
    t1.micro:
      Arch: HVM64
    t2.nano:
      Arch: HVM64
    t2.micro:
      Arch: HVM64
    t2.small:
      Arch: HVM64
    t2.medium:
      Arch: HVM64
    t2.large:
      Arch: HVM64
  AWSInstanceType2NATArch:
    t1.micro:
      Arch: NATHVM64
    t2.nano:
      Arch: NATHVM64
    t2.micro:
      Arch: NATHVM64
    t2.small:
      Arch: NATHVM64
    t2.medium:
      Arch: NATHVM64
    t2.large:
      Arch: NATHVM64
  AWSRegionArch2AMI:
    us-east-1:
      HVM64: ami-0080e4c5bc078760e
      HVMG2: ami-0aeb704d503081ea6
    us-west-2:
      HVM64: ami-01e24be29428c15b2
      HVMG2: ami-0fe84a5b4563d8f27
    us-west-1:
      HVM64: ami-0ec6517f6edbf8044
      HVMG2: ami-0a7fc72dc0e51aa77
    us-east-2:
      HVM64: ami-0cd3dfa4e37921605
      HVMG2: NOT_SUPPORTED 
Resources:              
  EC2Instance:
    Type: 'AWS::EC2::Instance'
    Properties:
      InstanceType: !Ref InstanceType
      SecurityGroupIds:
        - !Ref InstanceSecurityGroup
      KeyName: !Ref KeyName
      #ImageId: 'ami-0dd387866de2504e4'
      ImageId: !FindInMap 
        - AWSRegionArch2AMI
        - !Ref 'AWS::Region'
        - !FindInMap 
          - AWSInstanceType2Arch
          - !Ref InstanceType
          - Arch      
      SubnetId: !Ref Subnet     
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          yum update -y
          useradd admin
          echo "P@ssW0rd" | passwd admin --stdin
          echo "#granting user admin root privileges" >> /etc/sudoers
          echo "admin  ALL=(ALL)       NOPASSWD: ALL" >> /etc/sudoers
          sed -i "s/.*PasswordAuthentication.*/PasswordAuthentication yes/g" /etc/ssh/sshd_config
          service sshd restart
      Tags:
        - Key: Name
          Value: !Sub '${EnvironmentName}-EC2'           
Outputs:
  InstanceId:
    Description: InstanceId of the newly created EC2 instance
    Value: !Ref EC2Instance
  AZ:
    Description: Availability Zone of the newly created EC2 instance
    Value: !GetAtt 
      - EC2Instance
      - AvailabilityZone
  PublicIP:
    Description: Public IP address of the newly created EC2 instance
    Value: !GetAtt 
      - EC2Instance
      - PublicIp 
